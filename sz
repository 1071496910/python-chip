#!/usr/bin/python
#-*- coding: utf-8 -*-
from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer
import SocketServer
import threading
import time
import tarfile
import os
import socket

def Get_IP():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))
    ip_addr = s.getsockname()[0]
    s.close()
    return ip_addr

httpd_continue = True

class S(BaseHTTPRequestHandler):
    def _set_headers(self):
        self.send_response(200)
        self.send_header('Content-type', 'application/tar')
        #self.send_header('Content-type', 'text/html')
        self.end_headers()

    def do_GET(self):
        f = open(dst)
        self._set_headers()
        self.wfile.write(f.read())
        globals()['httpd_continue'] = False
        
        

    def do_HEAD(self):
        self._set_headers()
        
    def do_POST(self):
        # Doesn't do anything with posted data
        self._set_headers()
        self.wfile.write("<html><body><h1>POST!</h1></body></html>")

def init_server(server_class=HTTPServer, handler_class=S, port=8888):
    server_address = ('', port)
    httpd = server_class(server_address, handler_class)
    return httpd

        
def run(server_class=HTTPServer, handler_class=S, port=88888):
    httpd = init_server()
    print 'Starting httpd...'
    httpd.serve_forever()

def help():
    print "Usage: sz <filename>"

def root_dir_err():
    print "Can't sz / "

if __name__ == "__main__":
    from sys import argv


    if len(argv) < 2:
        help() 
        os._exit(1)

    src=argv[1]
    if src == '/':
        root_dir_err()
        os._exit(1)

    dst = os.path.basename(src.rstrip('/'))
    dst = dst + ".tar"
    tar = tarfile.open(dst, 'w')
    fullpath=os.path.abspath(src)
    tar.add(fullpath)
    tar.close()

    httpd = init_server()
    t = threading.Thread(target=httpd.serve_forever, name="httpd_thread")
    t.start()
    print "Please check url: http://%s:8888/%s" %(Get_IP(), dst)
    while httpd_continue:
    #    print httpd_continue
        time.sleep(1) 
    httpd.shutdown()
